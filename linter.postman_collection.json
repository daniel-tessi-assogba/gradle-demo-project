{
  "info": {
    "_postman_id": "38c13084-1a43-4b48-baaf-f7fb119a0741",
    "name": "linter",
    "description": "API used to verify that a specification meets Allianz Trade API design guidelines.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "44908832"
  },
  "item": [
    {
      "name": "isAlive",
      "item": [
        {
          "name": "Return the API status.",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{LINTER_BASE_URL}}/isAlive",
              "host": [
                "{{LINTER_BASE_URL}}"
              ],
              "path": [
                "isAlive"
              ]
            }
          },
          "response": [
            {
              "name": "Success.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/isAlive",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "isAlive"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"OK\"\n}"
            },
            {
              "name": "Error.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/isAlive",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "isAlive"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "specifications",
      "item": [
        {
          "name": "verifyCompliance",
          "item": [
            {
              "name": "Verify API compliance to Allianz Trade rules.",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlduR05RMWNfMk4xcmx4QVFURnRqZURkZFFRd3lJa0RkeUNFLTVzbDN3SXcifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiI1M3Y0eEE4b3MzcF9kMUZBZkF1Q1lEeFRBeHdhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMudWF0LjFwbGFjZWRlc3NhaXNvbnMuY29tL3VhdHIvdjEvb2lkYyIsImp0aSI6Ilk5RTZwLTJyME1LS28xS2QyU3pBLSIsInN1YiI6IkdBRFxcVEFTU09HQkEiLCJpYXQiOjE3NDkyMTM3NTAsImV4cCI6MTc0OTIxNzM1MCwic2NvcGUiOiJvcGVuaWQiLCJjbGllbnRfaWQiOiI1M3Y0eEE4b3MzcF9kMUZBZkF1Q1lEeFRBeHdhIiwiYXVkIjoiNTN2NHhBOG9zM3BfZDFGQWZBdUNZRHhUQXh3YSIsImVtYWlsIjoiVGVzc2lEYW5pZWwuQXNzb2diYS5leHRAYWxsaWFuei10cmFkZS5jb20iLCJuYmYiOjE3NDkyMTM3NTAsImZpcnN0X25hbWUiOiJUZXNzaSBEYW5pZWwiLCJsYXN0X25hbWUiOiJBc3NvZ2JhIn0.k_HPPNMgxV2IJOQ8W927lntStySclmd9OXysOYLKqgX0ztICh1Zj4PqSnyUAgqz2uxxhIC0lSAmTkHQ33V24_llyCsYlg-yAUgHAdVOUBeLfA0wXOFU3QjI78gNYBKCCczzeYkpFZpcx4eZyIlF8rbqyhNNfZOrT-woDz01IgvzZRU726Y0JYuM8RPvTJxbgHhuqugpJ8M1QlH3cje2_REh_IZIllda232cG2gkzVMyOWWRx1Hak2iO2wo9x50cbjbya5QKEXpVvT0-fxp9WIhD1MD6IsMq2sp5tqaRDkJI8MNmtYYSCqwFklmJzQhtpyUQKi8tkSBiIECM-NpB2fg",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "rulesVersion",
                      "value": "LAST",
                      "description": "Allows to choose the version of the rules defined by API Governance.",
                      "type": "text"
                    },
                    {
                      "key": "responseTypeCode",
                      "value": "APPLICATION/JSON",
                      "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                      "type": "text"
                    },
                    {
                      "key": "rulesFilterCode",
                      "value": "ALL",
                      "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                      "type": "text"
                    },
                    {
                      "key": "mergeRequestId",
                      "value": "4289",
                      "description": "Any open merge request identifier.",
                      "type": "text"
                    },
                    {
                      "key": "specificationFile",
                      "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                      "type": "file",
                      "src": "/Users/dassogba/workspace/projects/API_Specification/CRM/api-crm-account-management.openapi.yaml",
                      "disabled": true
                    }
                  ]
                },
                "url": {
                  "raw": "{{LINTER_BASE_URL}}/specifications/verifyCompliance",
                  "host": [
                    "{{LINTER_BASE_URL}}"
                  ],
                  "path": [
                    "specifications",
                    "verifyCompliance"
                  ]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "rulesVersion",
                          "value": "LAST",
                          "description": "Allows to choose the version of the rules defined by API Governance.",
                          "type": "text"
                        },
                        {
                          "key": "responseTypeCode",
                          "value": "APPLICATION/JSON",
                          "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                          "type": "text"
                        },
                        {
                          "key": "rulesFilterCode",
                          "value": "ALL",
                          "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                          "type": "text"
                        },
                        {
                          "key": "mergeRequestId",
                          "value": "<string>",
                          "description": "Any open merge request identifier.",
                          "type": "text"
                        },
                        {
                          "key": "specificationFile",
                          "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specifications/verifyCompliance",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specifications",
                        "verifyCompliance"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"apiName\": \"<string>\",\n  \"version\": \"<string>\",\n  \"specificationFile\": \"<string>\",\n  \"rulesVersion\": \"<string>\",\n  \"score\": \"<string>\",\n  \"numberOfUnconformities\": \"<number>\",\n  \"summaries\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"count\": 32746540.09733072,\n      \"severityCode\": {\n        \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n        \"example\": \"ERROR\"\n      },\n      \"creationDate\": \"2012-09-21\"\n    },\n    {\n      \"ruleName\": \"<string>\",\n      \"count\": -51125454.82259381,\n      \"severityCode\": {\n        \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n        \"example\": \"ERROR\"\n      },\n      \"creationDate\": \"1982-05-21\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"message\": \"id cillum sed\",\n      \"path\": \"esse do ullamco reprehenderit non\",\n      \"range\": {\n        \"description\": \"The code range within which the unconformity is located.\"\n      },\n      \"severityCode\": {\n        \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n        \"example\": \"ERROR\"\n      },\n      \"creationDate\": \"2014-11-24\"\n    },\n    {\n      \"ruleName\": \"<string>\",\n      \"message\": \"sunt cillum\",\n      \"path\": \"dolor et nulla\",\n      \"range\": {\n        \"description\": \"The code range within which the unconformity is located.\"\n      },\n      \"severityCode\": {\n        \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n        \"example\": \"ERROR\"\n      },\n      \"creationDate\": \"1965-09-07\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "rulesVersion",
                          "value": "LAST",
                          "description": "Allows to choose the version of the rules defined by API Governance.",
                          "type": "text"
                        },
                        {
                          "key": "responseTypeCode",
                          "value": "APPLICATION/JSON",
                          "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                          "type": "text"
                        },
                        {
                          "key": "rulesFilterCode",
                          "value": "ALL",
                          "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                          "type": "text"
                        },
                        {
                          "key": "mergeRequestId",
                          "value": "<string>",
                          "description": "Any open merge request identifier.",
                          "type": "text"
                        },
                        {
                          "key": "specificationFile",
                          "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specifications/verifyCompliance",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specifications",
                        "verifyCompliance"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Unauthorized user",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "rulesVersion",
                          "value": "LAST",
                          "description": "Allows to choose the version of the rules defined by API Governance.",
                          "type": "text"
                        },
                        {
                          "key": "responseTypeCode",
                          "value": "APPLICATION/JSON",
                          "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                          "type": "text"
                        },
                        {
                          "key": "rulesFilterCode",
                          "value": "ALL",
                          "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                          "type": "text"
                        },
                        {
                          "key": "mergeRequestId",
                          "value": "<string>",
                          "description": "Any open merge request identifier.",
                          "type": "text"
                        },
                        {
                          "key": "specificationFile",
                          "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specifications/verifyCompliance",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specifications",
                        "verifyCompliance"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Resource not found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "rulesVersion",
                          "value": "LAST",
                          "description": "Allows to choose the version of the rules defined by API Governance.",
                          "type": "text"
                        },
                        {
                          "key": "responseTypeCode",
                          "value": "APPLICATION/JSON",
                          "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                          "type": "text"
                        },
                        {
                          "key": "rulesFilterCode",
                          "value": "ALL",
                          "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                          "type": "text"
                        },
                        {
                          "key": "mergeRequestId",
                          "value": "<string>",
                          "description": "Any open merge request identifier.",
                          "type": "text"
                        },
                        {
                          "key": "specificationFile",
                          "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specifications/verifyCompliance",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specifications",
                        "verifyCompliance"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "rulesVersion",
                          "value": "LAST",
                          "description": "Allows to choose the version of the rules defined by API Governance.",
                          "type": "text"
                        },
                        {
                          "key": "responseTypeCode",
                          "value": "APPLICATION/JSON",
                          "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                          "type": "text"
                        },
                        {
                          "key": "rulesFilterCode",
                          "value": "ALL",
                          "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                          "type": "text"
                        },
                        {
                          "key": "mergeRequestId",
                          "value": "<string>",
                          "description": "Any open merge request identifier.",
                          "type": "text"
                        },
                        {
                          "key": "specificationFile",
                          "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                          "type": "file",
                          "src": []
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specifications/verifyCompliance",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specifications",
                        "verifyCompliance"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "{{baseUrl}}/specifications/verifyCompliance",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwianRpIjoiWXdIczRxUG9HVzk3Q2tGejUzbHNQIiwic3ViIjoiR0FEXFxUQVNTT0dCQSIsImlhdCI6MTc0NzgxOTIwNSwiZXhwIjoxNzQ3ODIyODA1LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJUZXNzaURhbmllbC5Bc3NvZ2JhLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0NzgxOTIwNSwiZmlyc3RfbmFtZSI6IlRlc3NpIERhbmllbCIsImxhc3RfbmFtZSI6IkFzc29nYmEifQ.JCgjgEbZjJH1cidyyrSGJRFGhblii6R0pgSGchyCE29iD0nqCuj9FUvp3I5EWjHmm0TBmKU1QLfIU-FOhnPUXWh9oxLONyaT6yHxaA7yF0BVtE79mODn1TJnqw71znnLTBCMKet-Hkr4TgKAI5bY_rP97rWvpBeJexYdEKlp9gZxrerBN7xujUbmkF1C6uXq_vGQkaS-InOsm2FAVXu7OsfhiXb3XgZS8aVI0ymiDSkWO2oBCGx1pZ5Lr4R3GHb_Ccab6cOj20niKFZt7leeKF6AHkF2miTqXYMZE-b8pSubQ31UB_diyCPLTzjcfzhc4LjTBOI3DXqUdUAgv1On8g",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "rulesVersion",
                      "value": "LAST",
                      "description": "Allows to choose the version of the rules defined by API Governance.",
                      "type": "text"
                    },
                    {
                      "key": "responseTypeCode",
                      "value": "APPLICATION/JSON",
                      "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                      "type": "text"
                    },
                    {
                      "key": "rulesFilterCode",
                      "value": "ALL",
                      "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                      "type": "text"
                    },
                    {
                      "key": "mergeRequestId",
                      "value": "<string>",
                      "description": "Any open merge request identifier.",
                      "type": "text"
                    },
                    {
                      "key": "specificationFile",
                      "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/specifications/verifyCompliance",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specifications",
                    "verifyCompliance"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "{{baseUrl}}/specifications/verifyCompliance",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwibWljcm9zdHJhdGVneV9pZCI6IlRBU1NPR0JBIiwianRpIjoiWXpVbmlGUFVZUzZjU2JpdWFRZ0w5Iiwic3ViIjoiR0FEXFxUQVNTT0dCQSIsImlhdCI6MTc0ODQxNjEwNCwiZXhwIjoxNzQ4NDE5NzA0LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJUZXNzaURhbmllbC5Bc3NvZ2JhLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0ODQxNjEwNCwiZmlyc3RfbmFtZSI6IlRlc3NpIERhbmllbCIsImxhc3RfbmFtZSI6IkFzc29nYmEifQ.VcHXANEW3IieVrZXd1UOe48mUtcMsjFGydueLpcL5VVk1mM8I-m0gbqXLbFIiWf0qQ35vb0apmlDBUbgVjcoiuu1CAZdEznGYf-70owk2lwgKILB1tUSpikFhmombZksA_Ybc9ZsUw0n8BRRsUUOq45VQ9cZRPvwy-V-26B6cGO9ZpH9Gj0Eixvph6GRMuahefXN2b1BXkacWyv51pfOhRiH74woCnlXuSZDk2Y3ESe67KnWmwrVFd1nHTZujnsvIA3XrmV34LbE2ajMl4rVIPY9-aYe1ZYhPAYUHjZzbkFqkzuXCnu5IZpHiZBLTQKa6oRUVziJx8H8v7cB9r8BBQ\n\n\n\n\n",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "rulesVersion",
                      "value": "LAST",
                      "description": "Allows to choose the version of the rules defined by API Governance.",
                      "type": "text"
                    },
                    {
                      "key": "responseTypeCode",
                      "value": "APPLICATION/JSON",
                      "description": "Desired response format:\n * `APPLICATION/PDF` - to get a PDF report of the linting results.\n * `APPLICATION/JSON` - To get a JSON of the linting results.\n (This can only be one of APPLICATION/PDF,APPLICATION/JSON)",
                      "type": "text"
                    },
                    {
                      "key": "rulesFilterCode",
                      "value": "ALL",
                      "description": "Type of rules to run.  Default value is `ALL`. Possible values are:\n  * `ALL`, to run all rules\n  * `STREAM`, to run rules that are required for stream\n  * `STYLE`, to run rules that are related to style\n  * `API`, to run rules that are related to API specifications\n (This can only be one of ALL,STREAM,STYLE,API)",
                      "type": "text"
                    },
                    {
                      "key": "mergeRequestId",
                      "value": "<string>",
                      "description": "Any open merge request identifier.",
                      "type": "text"
                    },
                    {
                      "key": "specificationFile",
                      "description": "Specification file to verify. File extension must be *.yaml, *.yml or *.json",
                      "type": "file",
                      "src": "/Users/dassogba/workspace/projects/API_Specification/CRM/api-crm-account-management.openapi.yaml"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/specifications/verifyCompliance",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specifications",
                    "verifyCompliance"
                  ]
                }
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "ruleSets",
      "item": [
        {
          "name": "Allows to know what are the rules defined by API Governance and applied to the API specifications",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwibWljcm9zdHJhdGVneV9pZCI6IlRBU1NPR0JBIiwianRpIjoicnExOG0zb3Y2V2VDaEJ6NVc0YlVCIiwic3ViIjoiR0FEXFxUQVNTT0dCQSIsImlhdCI6MTc0ODE2ODY3NCwiZXhwIjoxNzQ4MTcyMjc0LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJUZXNzaURhbmllbC5Bc3NvZ2JhLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0ODE2ODY3NCwiZmlyc3RfbmFtZSI6IlRlc3NpIERhbmllbCIsImxhc3RfbmFtZSI6IkFzc29nYmEifQ.Ej5oVXlfpgqKvdIzZ-n32Z2zhBd0KMoY3aqkbBGl0JlXQRos4MFkYkIL_5aNV-610g2EvEoMPcexEpFp-lJvhQyMdeZ0aDb0SKm4sdkzrfvzMF6sqMe_y_uu1Md9ZFWg-06bQe_JHZPrbYxDeJ-kpccptd4AyJuf70aOr4wmthBxAHGhciXG7guvmoU9r2nZz6n1RK9YdTLas0wdg_m3tg96-nWO6o9PqzM_yFb-QOEtm_f-jGA2Ny3YKyYvqjmoDgajv774CGbhH44uWncAKfw_IpkPEkGS8ChDDB3iAGgfrGXdLKXqth_oMVUnFKC_Ri2hF3NHzVoDJhUbTG-Llw",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{LINTER_BASE_URL}}/ruleSets?version=ALL",
              "host": [
                "{{LINTER_BASE_URL}}"
              ],
              "path": [
                "ruleSets"
              ],
              "query": [
                {
                  "key": "version",
                  "value": "ALL",
                  "description": "The version of rules to be returned. The available values are :\n* if it is set to \"ALL\" or if it is ommitted, all the versions of rules are returned.\n* if it is set to \"LAST\" only the last version is returnd\n* A specific rule set version\n"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Ruleset(s) of the version(s) given in input",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ruleSets?version=ALL",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "ruleSets"
                  ],
                  "query": [
                    {
                      "key": "version",
                      "value": "ALL",
                      "description": "The version of rules to be returned. The available values are :\n* if it is set to \"ALL\" or if it is ommitted, all the versions of rules are returned.\n* if it is set to \"LAST\" only the last version is returnd\n* A specific rule set version\n"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"version\": \"<string>\",\n    \"rules\": [\n      {\n        \"ruleName\": \"<string>\",\n        \"severityCode\": {\n          \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n          \"example\": \"ERROR\"\n        },\n        \"creationDate\": \"1991-11-22\"\n      },\n      {\n        \"ruleName\": \"<string>\",\n        \"severityCode\": {\n          \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n          \"example\": \"ERROR\"\n        },\n        \"creationDate\": \"1977-02-26\"\n      }\n    ]\n  },\n  {\n    \"version\": \"<string>\",\n    \"rules\": [\n      {\n        \"ruleName\": \"<string>\",\n        \"severityCode\": {\n          \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n          \"example\": \"ERROR\"\n        },\n        \"creationDate\": \"1957-03-31\"\n      },\n      {\n        \"ruleName\": \"<string>\",\n        \"severityCode\": {\n          \"description\": \"Rule severity. Possible values are:\\n  * `ERROR`\\n  * `WARN`\\n  * `INFO`\\n  * `HINT`\\n\",\n          \"example\": \"ERROR\"\n        },\n        \"creationDate\": \"1960-03-01\"\n      }\n    ]\n  }\n]"
            },
            {
              "name": "No content",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ruleSets?version=ALL",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "ruleSets"
                  ],
                  "query": [
                    {
                      "key": "version",
                      "value": "ALL",
                      "description": "The version of rules to be returned. The available values are :\n* if it is set to \"ALL\" or if it is ommitted, all the versions of rules are returned.\n* if it is set to \"LAST\" only the last version is returnd\n* A specific rule set version\n"
                    }
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ruleSets?version=ALL",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "ruleSets"
                  ],
                  "query": [
                    {
                      "key": "version",
                      "value": "ALL",
                      "description": "The version of rules to be returned. The available values are :\n* if it is set to \"ALL\" or if it is ommitted, all the versions of rules are returned.\n* if it is set to \"LAST\" only the last version is returnd\n* A specific rule set version\n"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Unauthorized user",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ruleSets?version=ALL",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "ruleSets"
                  ],
                  "query": [
                    {
                      "key": "version",
                      "value": "ALL",
                      "description": "The version of rules to be returned. The available values are :\n* if it is set to \"ALL\" or if it is ommitted, all the versions of rules are returned.\n* if it is set to \"LAST\" only the last version is returnd\n* A specific rule set version\n"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Error",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ruleSets?version=ALL",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "ruleSets"
                  ],
                  "query": [
                    {
                      "key": "version",
                      "value": "ALL",
                      "description": "The version of rules to be returned. The available values are :\n* if it is set to \"ALL\" or if it is ommitted, all the versions of rules are returned.\n* if it is set to \"LAST\" only the last version is returnd\n* A specific rule set version\n"
                    }
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "specificationWhitelists",
      "item": [
        {
          "name": "{specificationWhitelistId}",
          "item": [
            {
              "name": "excludedRules",
              "item": [
                {
                  "name": "{ruleId}",
                  "item": [
                    {
                      "name": "update a specific rule whitelisted for an API",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authentication",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}",
                              "type": "string"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules",
                            ":ruleId"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId",
                              "value": "<string>",
                              "description": "(Required) The identifier of the API specification white list"
                            },
                            {
                              "key": "ruleId",
                              "value": "<string>",
                              "description": "(Required) The identifier of the whitelisted rule to delete"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "updated with succes",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Unauthorized user",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Forbidden resource",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Resource not found",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"ruleName\": \"<string>\",\n  \"ruleId\": \"in\",\n  \"comment\": \"nostrud cillum\",\n  \"path\": \"id\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Remove a specific rule whitelisted for an API",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authentication",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}",
                              "type": "string"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules",
                            ":ruleId"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId",
                              "value": "<string>",
                              "description": "(Required) The identifier of the API specification white list"
                            },
                            {
                              "key": "ruleId",
                              "value": "<string>",
                              "description": "(Required) The identifier of the whitelisted rule to delete"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Removed",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Unauthorized user",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Forbidden resource",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Resource not found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authentication",
                                "value": "<API Key>",
                                "description": "Added as a part of security scheme: apikey"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules/:ruleId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "specificationWhitelists",
                                ":specificationWhitelistId",
                                "excludedRules",
                                ":ruleId"
                              ],
                              "variable": [
                                {
                                  "key": "specificationWhitelistId"
                                },
                                {
                                  "key": "ruleId"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Add one or more rules to the whitelist for a specific API",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authentication",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": "{{apiKey}}",
                          "type": "string"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId",
                        "excludedRules"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId",
                          "value": "<string>",
                          "description": "(Required) The identifier of the API specification white list"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authentication",
                            "value": "<API Key>",
                            "description": "Added as a part of security scheme: apikey"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"Ut\",\n      \"comment\": \"ullamco et ea\",\n      \"path\": \"sit et Duis cillum\"\n    }\n  ],\n  \"specificationWhitelistId\": \"<string>\"\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authentication",
                            "value": "<API Key>",
                            "description": "Added as a part of security scheme: apikey"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Unauthorized user",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authentication",
                            "value": "<API Key>",
                            "description": "Added as a part of security scheme: apikey"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Forbidden resource",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authentication",
                            "value": "<API Key>",
                            "description": "Added as a part of security scheme: apikey"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Resource not found",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authentication",
                            "value": "<API Key>",
                            "description": "Added as a part of security scheme: apikey"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Resource already exists",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authentication",
                            "value": "<API Key>",
                            "description": "Added as a part of security scheme: apikey"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Error",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authentication",
                            "value": "<API Key>",
                            "description": "Added as a part of security scheme: apikey"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"dolor commodo incididunt\",\n    \"comment\": \"Excepteur magna commodo\",\n    \"path\": \"minim occaecat anim est\"\n  },\n  {\n    \"ruleName\": \"<string>\",\n    \"ruleId\": \"officia dolore quis\",\n    \"comment\": \"sint ad\",\n    \"path\": \"culpa amet sit id\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId/excludedRules",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "specificationWhitelists",
                            ":specificationWhitelistId",
                            "excludedRules"
                          ],
                          "variable": [
                            {
                              "key": "specificationWhitelistId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "return the rules excluded from the API specification",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwibWljcm9zdHJhdGVneV9pZCI6IlRBU1NPR0JBIiwianRpIjoicnExOG0zb3Y2V2VDaEJ6NVc0YlVCIiwic3ViIjoiR0FEXFxUQVNTT0dCQSIsImlhdCI6MTc0ODE2ODY3NCwiZXhwIjoxNzQ4MTcyMjc0LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJUZXNzaURhbmllbC5Bc3NvZ2JhLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0ODE2ODY3NCwiZmlyc3RfbmFtZSI6IlRlc3NpIERhbmllbCIsImxhc3RfbmFtZSI6IkFzc29nYmEifQ.Ej5oVXlfpgqKvdIzZ-n32Z2zhBd0KMoY3aqkbBGl0JlXQRos4MFkYkIL_5aNV-610g2EvEoMPcexEpFp-lJvhQyMdeZ0aDb0SKm4sdkzrfvzMF6sqMe_y_uu1Md9ZFWg-06bQe_JHZPrbYxDeJ-kpccptd4AyJuf70aOr4wmthBxAHGhciXG7guvmoU9r2nZz6n1RK9YdTLas0wdg_m3tg96-nWO6o9PqzM_yFb-QOEtm_f-jGA2Ny3YKyYvqjmoDgajv774CGbhH44uWncAKfw_IpkPEkGS8ChDDB3iAGgfrGXdLKXqth_oMVUnFKC_Ri2hF3NHzVoDJhUbTG-Llw",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{LINTER_BASE_URL}}/specificationWhitelists/:specificationWhitelistId",
                  "host": [
                    "{{LINTER_BASE_URL}}"
                  ],
                  "path": [
                    "specificationWhitelists",
                    ":specificationWhitelistId"
                  ],
                  "variable": [
                    {
                      "key": "specificationWhitelistId",
                      "value": "e0b23de69d90b494cf5a42300643336f5839e04fc766bd2424d4366eb4470c7d",
                      "description": "(Required) The identifier of the API specification while list"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"Ut\",\n      \"comment\": \"ullamco et ea\",\n      \"path\": \"sit et Duis cillum\"\n    }\n  ],\n  \"specificationWhitelistId\": \"<string>\"\n}"
                },
                {
                  "name": "Unauthorized user",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Forbidden resource",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Resource not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Change the title of a specific API",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authentication",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": "{{apiKey}}",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{LINTER_BASE_URL}}/specificationWhitelists/:specificationWhitelistId",
                  "host": [
                    "{{LINTER_BASE_URL}}"
                  ],
                  "path": [
                    "specificationWhitelists",
                    ":specificationWhitelistId"
                  ],
                  "variable": [
                    {
                      "key": "specificationWhitelistId",
                      "value": "<string>",
                      "description": "(Required) The identifier of the API specification white list"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Updated",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiTitle\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"Ut\",\n      \"comment\": \"ullamco et ea\",\n      \"path\": \"sit et Duis cillum\"\n    }\n  ],\n  \"specificationWhitelistId\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiTitle\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Unauthorized user",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiTitle\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Forbidden resource",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiTitle\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Resource not found",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiTitle\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiTitle\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Remove all specification whitelisted rules",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authentication",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": "{{apiKey}}",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{LINTER_BASE_URL}}/specificationWhitelists/:specificationWhitelistId",
                  "host": [
                    "{{LINTER_BASE_URL}}"
                  ],
                  "path": [
                    "specificationWhitelists",
                    ":specificationWhitelistId"
                  ],
                  "variable": [
                    {
                      "key": "specificationWhitelistId",
                      "value": "<string>",
                      "description": "(Required) The identifier of the API specification white list"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Removed",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unauthorized user",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Forbidden resource",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Resource not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/specificationWhitelists/:specificationWhitelistId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "specificationWhitelists",
                        ":specificationWhitelistId"
                      ],
                      "variable": [
                        {
                          "key": "specificationWhitelistId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Create a whitelist with rules to exclude from a specific API",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcWktIT0xMQUQiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwianRpIjoicjZ6a054QzRTUDNvVjV5OFl5SnBiIiwic3ViIjoiR0FEXFxaS0hPTExBRCIsImlhdCI6MTc0Njc4MDgzOSwiZXhwIjoxNzQ2Nzg0NDM5LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJaaW5lLktob2xsYWRpLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0Njc4MDgzOSwiZmlyc3RfbmFtZSI6IlppbmUiLCJsYXN0X25hbWUiOiJLaG9sbGFkaSJ9.DcLMIayo6_3F-wXbBTBNNpWISN1xpFvC6QYnc1Cy0mcd5wJ11fyX0FN-d4IiR1rMxBiBWhlAcZ41QjMKSJV5Ob5-Q9hf8ZeCAe6nyALYIwp0B3l99XELp27asnQVvGDcvndxnkZxhhYdRnIMYQiyi3JMY9y3NcVxJudhC1KZ7zwjhry22bzfO4U19M0k3PV0S6seT2_TISVcIXAdsrfhSwftXAVnEbM_EN2D8xgpucIyUqYQsoWbAor3q4O7V2ZQTeqpOipJdSNMNsrVFh_cWsnZE6NbTWzhUQe7SiicOIMxNZOrgb4gDsWGIX5aBFeAk6APY9CboHD7lWy2yC43Fg",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"apiTitle\": \"Notifications Management API\",\n  \"apiVersion\": \"1\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"[AZT-G005]enumeration-attributes-must-be-suffixed-with-code\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{LINTER_BASE_URL}}/specificationWhitelists",
              "host": [
                "{{LINTER_BASE_URL}}"
              ],
              "path": [
                "specificationWhitelists"
              ]
            }
          },
          "response": [
            {
              "name": "Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"do culpa in in commodo\",\n      \"comment\": \"pariatur et aliquip ullamco\",\n      \"path\": \"sint dolore quis voluptate\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"Ut\",\n      \"comment\": \"ullamco et ea\",\n      \"path\": \"sit et Duis cillum\"\n    }\n  ],\n  \"specificationWhitelistId\": \"<string>\"\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"do culpa in in commodo\",\n      \"comment\": \"pariatur et aliquip ullamco\",\n      \"path\": \"sint dolore quis voluptate\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Unauthorized user",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"do culpa in in commodo\",\n      \"comment\": \"pariatur et aliquip ullamco\",\n      \"path\": \"sint dolore quis voluptate\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Forbidden resource",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"do culpa in in commodo\",\n      \"comment\": \"pariatur et aliquip ullamco\",\n      \"path\": \"sint dolore quis voluptate\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Resource not found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"do culpa in in commodo\",\n      \"comment\": \"pariatur et aliquip ullamco\",\n      \"path\": \"sint dolore quis voluptate\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Resource already exists",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"do culpa in in commodo\",\n      \"comment\": \"pariatur et aliquip ullamco\",\n      \"path\": \"sint dolore quis voluptate\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiTitle\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"excludedRules\": [\n    {\n      \"ruleName\": \"<string>\",\n      \"ruleId\": \"do culpa in in commodo\",\n      \"comment\": \"pariatur et aliquip ullamco\",\n      \"path\": \"sint dolore quis voluptate\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get a specific specification whitelist based on the name and the version of the API if specified, otherwise, get the whole specifications whitelists.",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwibWljcm9zdHJhdGVneV9pZCI6IlRBU1NPR0JBIiwianRpIjoicnExOG0zb3Y2V2VDaEJ6NVc0YlVCIiwic3ViIjoiR0FEXFxUQVNTT0dCQSIsImlhdCI6MTc0ODE2ODY3NCwiZXhwIjoxNzQ4MTcyMjc0LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJUZXNzaURhbmllbC5Bc3NvZ2JhLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0ODE2ODY3NCwiZmlyc3RfbmFtZSI6IlRlc3NpIERhbmllbCIsImxhc3RfbmFtZSI6IkFzc29nYmEifQ.Ej5oVXlfpgqKvdIzZ-n32Z2zhBd0KMoY3aqkbBGl0JlXQRos4MFkYkIL_5aNV-610g2EvEoMPcexEpFp-lJvhQyMdeZ0aDb0SKm4sdkzrfvzMF6sqMe_y_uu1Md9ZFWg-06bQe_JHZPrbYxDeJ-kpccptd4AyJuf70aOr4wmthBxAHGhciXG7guvmoU9r2nZz6n1RK9YdTLas0wdg_m3tg96-nWO6o9PqzM_yFb-QOEtm_f-jGA2Ny3YKyYvqjmoDgajv774CGbhH44uWncAKfw_IpkPEkGS8ChDDB3iAGgfrGXdLKXqth_oMVUnFKC_Ri2hF3NHzVoDJhUbTG-Llw",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{LINTER_BASE_URL}}/specificationWhitelists?apiTitle=Surety API - Bond&apiVersion=1",
              "host": [
                "{{LINTER_BASE_URL}}"
              ],
              "path": [
                "specificationWhitelists"
              ],
              "query": [
                {
                  "key": "apiTitle",
                  "value": "Surety API - Bond",
                  "description": "The title of the API as marked on the specification."
                },
                {
                  "key": "apiVersion",
                  "value": "1",
                  "description": "The version of the API. Only the major version must be used."
                }
              ]
            },
            "description": "If `apiTitle` is provided, `apiVersion` must be provided too, and vice-versa."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists?apiTitle=<string>&apiVersion=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ],
                  "query": [
                    {
                      "key": "apiTitle",
                      "value": "<string>",
                      "description": "The title of the API as marked on the specification."
                    },
                    {
                      "key": "apiVersion",
                      "value": "<string>",
                      "description": "The version of the API. Only the major version must be used."
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"apiTitle\": \"<string>\",\n    \"apiVersion\": \"<string>\",\n    \"excludedRules\": [\n      {\n        \"ruleName\": \"<string>\",\n        \"ruleId\": \"dolore\",\n        \"comment\": \"occaecat mollit\",\n        \"path\": \"veniam eu pariatur\"\n      }\n    ],\n    \"specificationWhitelistId\": \"<string>\"\n  },\n  {\n    \"apiTitle\": \"<string>\",\n    \"apiVersion\": \"<string>\",\n    \"excludedRules\": [\n      {\n        \"ruleName\": \"<string>\",\n        \"ruleId\": \"\",\n        \"comment\": \"eu\",\n        \"path\": \"incididunt consectetur proident aliqua esse\"\n      }\n    ],\n    \"specificationWhitelistId\": \"<string>\"\n  }\n]"
            },
            {
              "name": "No content",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists?apiTitle=<string>&apiVersion=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ],
                  "query": [
                    {
                      "key": "apiTitle",
                      "value": "<string>",
                      "description": "The title of the API as marked on the specification."
                    },
                    {
                      "key": "apiVersion",
                      "value": "<string>",
                      "description": "The version of the API. Only the major version must be used."
                    }
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unauthorized user",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists?apiTitle=<string>&apiVersion=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ],
                  "query": [
                    {
                      "key": "apiTitle",
                      "value": "<string>",
                      "description": "The title of the API as marked on the specification."
                    },
                    {
                      "key": "apiVersion",
                      "value": "<string>",
                      "description": "The version of the API. Only the major version must be used."
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Forbidden resource",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists?apiTitle=<string>&apiVersion=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ],
                  "query": [
                    {
                      "key": "apiTitle",
                      "value": "<string>",
                      "description": "The title of the API as marked on the specification."
                    },
                    {
                      "key": "apiVersion",
                      "value": "<string>",
                      "description": "The version of the API. Only the major version must be used."
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Error",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/specificationWhitelists?apiTitle=<string>&apiVersion=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "specificationWhitelists"
                  ],
                  "query": [
                    {
                      "key": "apiTitle",
                      "value": "<string>",
                      "description": "The title of the API as marked on the specification."
                    },
                    {
                      "key": "apiVersion",
                      "value": "<string>",
                      "description": "The version of the API. Only the major version must be used."
                    }
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "excludedAbbreviations",
      "item": [
        {
          "name": "{abbreviation}",
          "item": [
            {
              "name": "Delete an abbreviation from the exluded list",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authentication",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": "{{apiKey}}",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations/:abbreviation",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations",
                    ":abbreviation"
                  ],
                  "variable": [
                    {
                      "key": "abbreviation",
                      "value": "<string>",
                      "description": "(Required) The abbreviation to be deleted"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/excludedAbbreviations/:abbreviation",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "excludedAbbreviations",
                        ":abbreviation"
                      ],
                      "variable": [
                        {
                          "key": "abbreviation"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/excludedAbbreviations/:abbreviation",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "excludedAbbreviations",
                        ":abbreviation"
                      ],
                      "variable": [
                        {
                          "key": "abbreviation"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Unauthorized user",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/excludedAbbreviations/:abbreviation",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "excludedAbbreviations",
                        ":abbreviation"
                      ],
                      "variable": [
                        {
                          "key": "abbreviation"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Forbidden resource",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/excludedAbbreviations/:abbreviation",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "excludedAbbreviations",
                        ":abbreviation"
                      ],
                      "variable": [
                        {
                          "key": "abbreviation"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Resource not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/excludedAbbreviations/:abbreviation",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "excludedAbbreviations",
                        ":abbreviation"
                      ],
                      "variable": [
                        {
                          "key": "abbreviation"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authentication",
                        "value": "<API Key>",
                        "description": "Added as a part of security scheme: apikey"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/excludedAbbreviations/:abbreviation",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "excludedAbbreviations",
                        ":abbreviation"
                      ],
                      "variable": [
                        {
                          "key": "abbreviation"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Add abbreviations to the excluded list",
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "key",
                  "value": "Authentication",
                  "type": "string"
                },
                {
                  "key": "value",
                  "value": "{{apiKey}}",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{LINTER_BASE_URL}}/excludedAbbreviations",
              "host": [
                "{{LINTER_BASE_URL}}"
              ],
              "path": [
                "excludedAbbreviations"
              ]
            }
          },
          "response": [
            {
              "name": "Abbreviation added",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  \"<string>\",\n  \"<string>\"\n]"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Unauthorized user",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Forbidden resource",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Resource already exists",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get all excluded abbreviations",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwibWljcm9zdHJhdGVneV9pZCI6IlRBU1NPR0JBIiwianRpIjoicnExOG0zb3Y2V2VDaEJ6NVc0YlVCIiwic3ViIjoiR0FEXFxUQVNTT0dCQSIsImlhdCI6MTc0ODE2ODY3NCwiZXhwIjoxNzQ4MTcyMjc0LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJUZXNzaURhbmllbC5Bc3NvZ2JhLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0ODE2ODY3NCwiZmlyc3RfbmFtZSI6IlRlc3NpIERhbmllbCIsImxhc3RfbmFtZSI6IkFzc29nYmEifQ.Ej5oVXlfpgqKvdIzZ-n32Z2zhBd0KMoY3aqkbBGl0JlXQRos4MFkYkIL_5aNV-610g2EvEoMPcexEpFp-lJvhQyMdeZ0aDb0SKm4sdkzrfvzMF6sqMe_y_uu1Md9ZFWg-06bQe_JHZPrbYxDeJ-kpccptd4AyJuf70aOr4wmthBxAHGhciXG7guvmoU9r2nZz6n1RK9YdTLas0wdg_m3tg96-nWO6o9PqzM_yFb-QOEtm_f-jGA2Ny3YKyYvqjmoDgajv774CGbhH44uWncAKfw_IpkPEkGS8ChDDB3iAGgfrGXdLKXqth_oMVUnFKC_Ri2hF3NHzVoDJhUbTG-Llw",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{LINTER_BASE_URL}}/excludedAbbreviations",
              "host": [
                "{{LINTER_BASE_URL}}"
              ],
              "path": [
                "excludedAbbreviations"
              ]
            }
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  \"<string>\",\n  \"<string>\"\n]"
            },
            {
              "name": "No Content",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unauthorized user",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Forbidden resource",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            },
            {
              "name": "Error",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authentication",
                    "value": "<API Key>",
                    "description": "Added as a part of security scheme: apikey"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/excludedAbbreviations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "excludedAbbreviations"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"path\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"location\": \"query\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Token",
      "item": [
        {
          "name": "authorize",
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {}
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWdWVoUHF2dHZvUWthLVdXTkJmV2tPSDZ6Y1UxNDZvdWZYREtOVFhNM0EifQ.eyJleHRlcm5hbF9pZCI6IkdBRFxcVEFTU09HQkEiLCJhenAiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiaXNzIjoiaHR0cHM6Ly9hcGktc2VydmljZXMuaW50LjFwbGFjZWRlc3NhaXNvbnMuY29tL2ludC92MS9vaWRjIiwibWljcm9zdHJhdGVneV9pZCI6IlRBU1NPR0JBIiwianRpIjoicnExOG0zb3Y2V2VDaEJ6NVc0YlVCIiwic3ViIjoiR0FEXFxUQVNTT0dCQSIsImlhdCI6MTc0ODE2ODY3NCwiZXhwIjoxNzQ4MTcyMjc0LCJzY29wZSI6Im9wZW5pZCIsImNsaWVudF9pZCI6IjJ6ZUNfMUJKdDdiMV85aVFRdnNUSng1akpDc2EiLCJhdWQiOiIyemVDXzFCSnQ3YjFfOWlRUXZzVEp4NWpKQ3NhIiwiZW1haWwiOiJUZXNzaURhbmllbC5Bc3NvZ2JhLmV4dEBhbGxpYW56LXRyYWRlLmNvbSIsIm5iZiI6MTc0ODE2ODY3NCwiZmlyc3RfbmFtZSI6IlRlc3NpIERhbmllbCIsImxhc3RfbmFtZSI6IkFzc29nYmEifQ.Ej5oVXlfpgqKvdIzZ-n32Z2zhBd0KMoY3aqkbBGl0JlXQRos4MFkYkIL_5aNV-610g2EvEoMPcexEpFp-lJvhQyMdeZ0aDb0SKm4sdkzrfvzMF6sqMe_y_uu1Md9ZFWg-06bQe_JHZPrbYxDeJ-kpccptd4AyJuf70aOr4wmthBxAHGhciXG7guvmoU9r2nZz6n1RK9YdTLas0wdg_m3tg96-nWO6o9PqzM_yFb-QOEtm_f-jGA2Ny3YKyYvqjmoDgajv774CGbhH44uWncAKfw_IpkPEkGS8ChDDB3iAGgfrGXdLKXqth_oMVUnFKC_Ri2hF3NHzVoDJhUbTG-Llw",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "upgrade-insecure-requests",
                "value": "1",
                "type": "text"
              },
              {
                "key": "user-agent",
                "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Postman/10.24.26 Electron/20.3.11 Safari/537.36",
                "type": "text"
              },
              {
                "key": "accept",
                "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                "type": "text"
              },
              {
                "key": "sec-fetch-site",
                "value": "none",
                "type": "text"
              },
              {
                "key": "sec-fetch-mode",
                "value": "navigate",
                "type": "text"
              },
              {
                "key": "sec-fetch-user",
                "value": "?1",
                "type": "text"
              },
              {
                "key": "sec-fetch-dest",
                "value": "document",
                "type": "text"
              },
              {
                "key": "accept-encoding",
                "value": "gzip, deflate, br",
                "type": "text"
              },
              {
                "key": "accept-language",
                "value": "fr",
                "type": "text"
              },
              {
                "key": "cookie",
                "value": "JSESSIONID=C3C9BA2E2BDFAC4268889913E1005CA5; commonAuthId=cd01587b-e0fd-4ff2-b81b-8ab38a438bc6; opbs=e93eedfc-f97f-4300-9845-fdbc61273cd8; AWSALB=zkL5gFisKcDjhMy30Ii9hdctvV5gaWQbYOe05Ws4bGvQ66O78keEGWzfc26WTr4UACKnf4oKIrzhhA421LuT/9cMbvE/j1/UGjGoHC9mjULR3DyiLqV780rsxCRF; AWSALBCORS=zkL5gFisKcDjhMy30Ii9hdctvV5gaWQbYOe05Ws4bGvQ66O78keEGWzfc26WTr4UACKnf4oKIrzhhA421LuT/9cMbvE/j1/UGjGoHC9mjULR3DyiLqV780rsxCRF",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://signin-uatr.uat.1placedessaisons.com/oauth2/authorize?response_type=code&client_id=LcSP58UpjPmPSp2LCKSROqKs120a&scope=openid&redirect_uri=https%3A%2F%2Fpostman.adfs.uatr.eulerhermes.com",
              "protocol": "https",
              "host": [
                "signin-uatr",
                "uat",
                "1placedessaisons",
                "com"
              ],
              "path": [
                "oauth2",
                "authorize"
              ],
              "query": [
                {
                  "key": "response_type",
                  "value": "code"
                },
                {
                  "key": "client_id",
                  "value": "LcSP58UpjPmPSp2LCKSROqKs120a"
                },
                {
                  "key": "scope",
                  "value": "openid"
                },
                {
                  "key": "redirect_uri",
                  "value": "https%3A%2F%2Fpostman.adfs.uatr.eulerhermes.com"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "content-type",
                "value": "application/x-www-form-urlencoded",
                "type": "text"
              },
              {
                "key": "user-agent",
                "value": "PostmanRuntime/7.37.3",
                "type": "text"
              },
              {
                "key": "accept",
                "value": "*/*",
                "type": "text"
              },
              {
                "key": "cache-control",
                "value": "no-cache",
                "type": "text"
              },
              {
                "key": "postman-token",
                "value": "3cbf8dc4-1b82-490b-9f1c-70b934cc508b",
                "type": "text"
              },
              {
                "key": "host",
                "value": "signin-uatr.uat.1placedessaisons.com",
                "type": "text"
              },
              {
                "key": "accept-encoding",
                "value": "gzip, deflate, br",
                "type": "text"
              },
              {
                "key": "connection",
                "value": "keep-alive",
                "type": "text"
              },
              {
                "key": "content-length",
                "value": "214",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://signin-uatr.uat.1placedessaisons.com/oauth2/token",
              "protocol": "https",
              "host": [
                "signin-uatr",
                "uat",
                "1placedessaisons",
                "com"
              ],
              "path": [
                "oauth2",
                "token"
              ]
            }
          },
          "response": []
        },
        {
          "name": "token Copy",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "content-type",
                "value": "application/x-www-form-urlencoded",
                "type": "text"
              },
              {
                "key": "user-agent",
                "value": "PostmanRuntime/7.37.3",
                "type": "text"
              },
              {
                "key": "accept",
                "value": "*/*",
                "type": "text"
              },
              {
                "key": "cache-control",
                "value": "no-cache",
                "type": "text"
              },
              {
                "key": "postman-token",
                "value": "3cbf8dc4-1b82-490b-9f1c-70b934cc508b",
                "type": "text"
              },
              {
                "key": "accept-encoding",
                "value": "gzip, deflate, br",
                "type": "text"
              },
              {
                "key": "connection",
                "value": "keep-alive",
                "type": "text"
              },
              {
                "key": "content-length",
                "value": "214",
                "type": "text",
                "disabled": true
              },
              {
                "key": "referer",
                "value": "https://signin-uatr.uat.1placedessaisons.com/oauth2/token",
                "type": "text"
              },
              {
                "key": "host",
                "value": "api-services.uat.1placedessaisons.com",
                "type": "text"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "url": {
              "raw": "https://api-services.uat.1placedessaisons.com/uatr/v1/oidc/oauth2/token",
              "protocol": "https",
              "host": [
                "api-services",
                "uat",
                "1placedessaisons",
                "com"
              ],
              "path": [
                "uatr",
                "v1",
                "oidc",
                "oauth2",
                "token"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api-services.dev02.1placedessaisons.com/dev02/specificationlinting/v1"
    },
    {
      "key": "LINTER_BASE_URL",
      "value": "http://localhost:3047",
      "type": "string"
    }
  ]
}
